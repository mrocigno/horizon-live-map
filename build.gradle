// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    apply from: "gradle/dependencies/dependencies.gradle"

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlinVersion"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    afterEvaluate {
        if (!project.hasProperty("android")) return

        android {
            compileSdkVersion 32
            buildToolsVersion "30.0.3"

            defaultConfig {
                minSdkVersion 26
                targetSdkVersion 32
                versionCode 1
                versionName "1.0"

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                consumerProguardFiles "consumer-rules.pro"
            }

            buildTypes {
                release {
                    buildConfigField "String", "BASE_URL", '"https://horizon-live-map-admin.vercel.app"'
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
                debug {
                    buildConfigField "String", "BASE_URL", '"https://horizon-live-map-admin.vercel.app"'
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            kotlinOptions {
                jvmTarget = '1.8'
                useIR = true
            }
            buildFeatures {
                compose true
            }
            composeOptions {
                kotlinCompilerExtensionVersion versions.androidx.compose
            }
            defaultConfig {
                vectorDrawables {
                    useSupportLibrary true
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}